# This is the main configuration file for the application.
# ~~~~~

# The application languages
# ~~~~~
# play.i18n.langs = "en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

pidfile {
	path = "/dev/null"
}

http {
	port = 9000
	port = ${?PERFBERRY_PORT}
}

play {
	evolutions {
		db {
			default {
				autoApply = true
			}
		}
	}
	http {
		parser {
			maxMemoryBuffer = 256M
			maxDiskBuffer = 256M
		}

		secret {
			# Secret key
			# ~~~~~
			# The secret key is used to secure cryptographics functions.
			# If you deploy your application to several instances be sure to use the same key!
			key = "%APPLICATION_SECRET%"
		}
	}
	server {
		akka {
			# This setting is set in `akka.http.server.parsing.max-content-length`
			# Play uses the concept of a `BodyParser` to enforce this limit, so we override it to infinite.
			max-content-length = 256M
		}
	}
}

slick {
	dbs {
		default {
			driver = "slick.driver.PostgresDriver$"
			db {
				driver = "org.postgresql.Driver"
				url = "jdbc:postgresql://postgres:5432/perfberry"
				url = ${?PERFBERRY_DB_URL}
				user = perfberry
				user = ${?PERFBERRY_DB_USER}
				password = secret
				password = ${?PERFBERRY_DB_PASSWORD}
				numThreads = 3
			}
		}
	}
}
